<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bank.project.oa.mapper.SalaryRecordMapper">
  <resultMap id="BaseResultMap" type="com.bank.project.oa.domain.SalaryRecord">
    <id column="id" jdbcType="TINYINT" property="id" />
    <result column="user_id" jdbcType="TINYINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="salary_date" jdbcType="VARCHAR" property="salaryDate" />
    <result column="must_salary" jdbcType="REAL" property="mustSalary" />
    <result column="reality_salary" jdbcType="REAL" property="realitySalary" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    r.id, r.user_id, r.salary_date, r.must_salary, r.reality_salary, r.create_time, r.update_time
    ,(select u.user_name from sys_user u where u.user_id = r.user_id) as user_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oa_salary_record r
    where r.id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from oa_salary_record
    where id = #{id}
  </delete>
  <delete id="deleteByIds" parameterType="String">
    delete from oa_salary_record where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <insert id="insertSelective" parameterType="com.bank.project.oa.domain.SalaryRecord">
    insert into oa_salary_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="salaryDate != null">
        salary_date,
      </if>
      <if test="mustSalary != null">
        must_salary,
      </if>
      <if test="realitySalary != null">
        reality_salary,
      </if>
      create_time,update_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="userId != null">
        #{userId},
      </if>
      <if test="salaryDate != null">
        #{salaryDate},
      </if>
      <if test="mustSalary != null">
        #{mustSalary},
      </if>
      <if test="realitySalary != null">
        #{realitySalary},
      </if>
      sysdate(),sysdate()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.project.oa.domain.SalaryRecord">
    update oa_salary_record
    <set>
      <if test="userId != null">
        user_id = #{userId},
      </if>
      <if test="salaryDate != null">
        salary_date = #{salaryDate},
      </if>
      <if test="mustSalary != null">
        must_salary = #{mustSalary},
      </if>
      <if test="realitySalary != null">
        reality_salary = #{realitySalary},
      </if>
      update_time = sysdate()
    </set>
    where id = #{id}
  </update>
  <select id="selectByExample" parameterType="com.bank.project.oa.domain.SalaryRecord" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from oa_salary_record r
    <where>
      <if test="userId != null and userId != ''">
        r.user_id = #{userId}
      </if>
      <if test="salaryDate != null and salaryDate != ''">
        and r.salary_date = #{salaryDate}
      </if>
    </where>
  </select>
</mapper>