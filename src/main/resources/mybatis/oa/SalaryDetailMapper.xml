<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bank.project.oa.mapper.SalaryDetailMapper">
  <resultMap id="BaseResultMap" type="com.bank.project.oa.domain.SalaryDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="cost_no" jdbcType="VARCHAR" property="costNo" />
    <result column="cost_name" jdbcType="VARCHAR" property="costName" />
    <result column="cost_amount" jdbcType="REAL" property="costAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, cost_no, cost_name, cost_amount, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oa_salary_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oa_salary_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bank.project.oa.domain.SalaryDetail">
    insert into oa_salary_detail (id, type, cost_no, 
      cost_name, cost_amount, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{costNo,jdbcType=VARCHAR}, 
      #{costName,jdbcType=VARCHAR}, #{costAmount,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bank.project.oa.domain.SalaryDetail">
    insert into oa_salary_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="costNo != null">
        cost_no,
      </if>
      <if test="costName != null">
        cost_name,
      </if>
      <if test="costAmount != null">
        cost_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="costNo != null">
        #{costNo,jdbcType=VARCHAR},
      </if>
      <if test="costName != null">
        #{costName,jdbcType=VARCHAR},
      </if>
      <if test="costAmount != null">
        #{costAmount,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.project.oa.domain.SalaryDetail">
    update oa_salary_detail
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="costNo != null">
        cost_no = #{costNo,jdbcType=VARCHAR},
      </if>
      <if test="costName != null">
        cost_name = #{costName,jdbcType=VARCHAR},
      </if>
      <if test="costAmount != null">
        cost_amount = #{costAmount,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.project.oa.domain.SalaryDetail">
    update oa_salary_detail
    set type = #{type,jdbcType=VARCHAR},
      cost_no = #{costNo,jdbcType=VARCHAR},
      cost_name = #{costName,jdbcType=VARCHAR},
      cost_amount = #{costAmount,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>