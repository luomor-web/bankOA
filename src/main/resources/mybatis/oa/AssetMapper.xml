<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bank.project.oa.mapper.AssetMapper">
  <resultMap id="BaseResultMap" type="com.bank.project.oa.domain.Asset">
    <id column="id" jdbcType="TINYINT" property="id" />
    <result column="asset_no" jdbcType="VARCHAR" property="assetNo" />
    <result column="asset_name" jdbcType="VARCHAR" property="assetName" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="num_unit" jdbcType="VARCHAR" property="numUnit" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="storage_time" jdbcType="VARCHAR" property="storageTime" />
    <result column="add_user_id" jdbcType="VARCHAR" property="addUserId" />
    <result column="add_time" jdbcType="VARCHAR" property="addTime" />
    <result column="revert_time" jdbcType="VARCHAR" property="revertTime" />
    <result column="abrade_rate" jdbcType="VARCHAR" property="abradeRate" />
    <result column="asset_type" jdbcType="VARCHAR" property="assetType" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, asset_no, asset_name, num, num_unit, price, storage_time, add_user_id, add_time, 
    revert_time, abrade_rate, asset_type, status, create_time, update_time
  </sql>
  <select id="countTotal"  resultType="String">
    select
    sum(num)
    from oa_asset
  </select>
  <select id="countAmount" resultType="String">
    select
    sum(num*price)
    from oa_asset
  </select>

  <select id="countTypeTotal" resultType="java.util.Map">
    select
    asset_type,sum(num)
    from oa_asset
    group by asset_type
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oa_asset
    where id = #{id}
  </select>
  <select id="selectByExample" parameterType="com.bank.project.oa.domain.Asset" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from oa_asset
    <where>
      <if test="assetName != null and assetName != ''">
        AND asset_name like concat('%', #{assetName}, '%')
      </if>
      <if test="assetType != null and assetType != ''">
        AND asset_type = #{assetType}
      </if>
      <if test="status != null and status != ''">
        AND status = #{status}
      </if>
      <if test="assetNo != null and assetNo != ''">
        AND asset_no like concat('%', #{assetNo}, '%')
      </if>
    </where>
  </select>
  <delete id="deleteById" parameterType="String">
  delete from oa_asset where id = #{id}
  </delete>
  <delete id="deleteByIds" parameterType="String">
    delete from oa_asset where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <insert id="insertSelective"  keyProperty="id" useGeneratedKeys = "true"  parameterType="com.bank.project.oa.domain.Asset">
    insert into oa_asset
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="assetNo != null">
        asset_no,
      </if>
      <if test="assetName != null">
        asset_name,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="numUnit != null">
        num_unit,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="storageTime != null">
        storage_time,
      </if>
      <if test="addUserId != null">
        add_user_id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="revertTime != null">
        revert_time,
      </if>
      <if test="abradeRate != null">
        abrade_rate,
      </if>
      <if test="assetType != null">
        asset_type,
      </if>
      <if test="status != null">
        status,
      </if>
        create_time,update_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="assetNo != null">
        #{assetNo},
      </if>
      <if test="assetName != null">
        #{assetName},
      </if>
      <if test="num != null">
        #{num},
      </if>
      <if test="numUnit != null">
        #{numUnit},
      </if>
      <if test="price != null">
        #{price},
      </if>
      <if test="storageTime != null">
        #{storageTime},
      </if>
      <if test="addUserId != null">
        #{addUserId},
      </if>
      <if test="addTime != null">
        #{addTime},
      </if>
      <if test="revertTime != null">
        #{revertTime},
      </if>
      <if test="abradeRate != null">
        #{abradeRate},
      </if>
      <if test="assetType != null">
        #{assetType},
      </if>
      <if test="status != null">
        #{status},
      </if>
      sysdate(),sysdate()
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.bank.project.oa.domain.Asset">
    update oa_asset
    <set>
      <if test="assetNo != null">
        asset_no = #{assetNo},
      </if>
      <if test="assetName != null">
        asset_name = #{assetName},
      </if>
      <if test="num != null">
        num = #{num},
      </if>
      <if test="numUnit != null">
        num_unit = #{numUnit},
      </if>
      <if test="price != null">
        price = #{price},
      </if>
      <if test="storageTime != null">
        storage_time = #{storageTime},
      </if>
      <if test="addUserId != null">
        add_user_id = #{addUserId},
      </if>
      <if test="addTime != null">
        add_time = #{addTime},
      </if>
      <if test="revertTime != null">
        revert_time = #{revertTime},
      </if>
      <if test="abradeRate != null">
        abrade_rate = #{abradeRate},
      </if>
      <if test="assetType != null">
        asset_type = #{assetType},
      </if>
      <if test="status != null">
        status = #{status},
      </if>
        update_time = sysdate()
    </set>
    where id = #{id}
  </update>
</mapper>